<templateSet group="_BASE">
  <template name="import" value="from  $module$ import * &#10;&#10;$END$" description="my import *" toReformat="false" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="func empty command 2" value="pass&#10;$END$" description="my pass" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func block code multiline" value="(&#10;$END$&#10;)" description="my group of operators" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="if oneline" value="if one&gt;two: print(two) $END$" description="my onelined operator" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="if ternarn" value="itogo = one if True else two $END$" description="X if else Y" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="DEPRECATED if default" value="v = x or defualt $END$" description="x OR default" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func empty command 1" value="...&#10;$END$" description="my ..." toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="if classic" value="if True: &#10;    print(&quot;1&quot;)&#10;elif False:&#10;    print(&quot;2&quot;)&#10;else:&#10;    print(&quot;3&quot;)&#10;$END$" description="if elif else" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="if XOR" value="if bool(root.left) ^ bool(root.right):&#10;            return False" description="bool(left) ^ bool(right)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="string из 20 символов" value="&quot;&quot;.zfill(20)" description="&quot;&quot;.zfill(20)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="str regex" value="re.sub(r&quot;\s+&quot;, &quot;&quot;, s)  # уберем из строки все пробелы" description="re.sub(r&quot;\s+&quot;, &quot;&quot;, s)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="str isalnum" value="def isalnum(sym: str):  # isalnum -  своя функция так как системная str.isalpha str.isalnum дает True на всю таблицу&#10;    return True if sym.isnumeric() or 'a' &lt;= sym &lt;= 'z' or 'A' &lt;= sym &lt;= 'Z' else False" description="'a' &lt;= sym &lt; 'z'" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
</templateSet>