<templateSet group="_VV_container__methods">
  <template name="cl list add one" value="$s$.append($END$)" description="list.append" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl list insert one (classic)" value="$s$.insert(4,$END$)" description="list.insert" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl list add many (classic)" value="$s$.extend([$END$])" description="list.extend" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl list insert one (short)" value="$s$[4:4]=[$END$]" description="list[4:4]=[]" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl list add many (short)" value="$s$[len($s$):]=[$END$]" description="list[len:]=[]" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl list add many (super)" value="$s$+=[$END$]" description="list+=[]" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ul list update one" value="$s$[4] = $END$" description="list[4]=" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ul list update many" value="$s$[4:5] = [$END$]" description="list[4:5]=[]" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl list add many  (left)" value="$s$[:0]=[$END$]" description="list[:0]=" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dl list del many" value="$s$[4:5]=[]$END$" description="list[4:5]= []" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dl list del one by index" value="del $s$[4] $END$" description="del list[4]" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dl list del one by value" value="$s$.remove($END$)" description="list.remove" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dl list del one right" value="$e$=$s$.pop() $END$" description="list.pop" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="e" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dl list del one left" value="$e$=$s$.popleft() $END$" description="list.popleft" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="e" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dl list del one by index POP" value="$e$=$s$.pop(4) $END$" description="list.pop(4)" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="e" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dl list del all" value="$s$.clear() $END$" description="list.clear" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl tuple add many (super)" value="$s$+=($END$)" description="tuple+=[]" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cs set add one" value="$s$.add($END$)" description="set.add" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cs set add many (classic)" value="$s$.update({$END$})" description="set.update" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cs set add many (super)" value="$s$|={$END$}" description="set|={}" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ds set del many by value" value="$s$-={$END$}" description="set-={}" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ds set del one right" value="$e$=$s$.pop() $END$" description="set.pop" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="e" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ds set del one noErrorIfAbsent" value="$s$.discard($END$)" description="set.discard" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ds set del all" value="$s$.clear() $END$" description="set.clear" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cm map add one" value="$s$[$key$]=$END$" description="dict[]=" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="key" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cm map add many 1" value="$s$.update({1:&quot;a&quot;,2:&quot;b&quot;$END$})" description="dict.update" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="rm map get one noErrorIfAbsent" value="$v$=$s$.get($key$) $END$" description="dict.get (or DefaultValue)" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="v" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="key" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="rm map get all addNewIfAbsent" value="$v$=$s$.setdefault($key$,&quot;defualtValue&quot;) $END$" description="dict.setdefault (or DefaultValue)" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="v" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <variable name="key" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dm map del one by key" value="del $s$[4] $END$" description="del dict[4]" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dm map del one by key POP" value="$e$=$s$.pop(4,&quot;ifnone&quot;) $END$" description="dict.pop(4)" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="e" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dm map del one right" value="$e$=$s$.popitem() $END$" description="dict.pop" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="e" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dm map del all" value="$s$.clear() $END$" description="dict.clear" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="rl list find/index/count ONE" value="s.index(b) ==error&#10;s.count(b)&#10;s.find(b)==-1&#10; $END$" description="find index count" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cm map add many 2" value="$s$.update(uno=&quot;a&quot;, dos=&quot;b&quot;$END$)" description="dict.update(uno=1, dos=2)" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="um map add_new or update_if_exists" value="value_ = $s$.setdefault(key_, [])&#10;value_ += [num2]" description="setdefault and update" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cm map add many 3  / map chain" value="m1 = {'music': 'bach', 'art': 'rembrandt'}&#10;m2 = {'art': 'van gogh', 'opera': 'carmen'}&#10;list(ChainMap(m1, m2))&#10;['music', 'art', 'opera']" description="map1+map2 склеить несколько словарей ChainMap(m1, m2)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl list add many (chain)" value="arr1 = [1, 2]&#10;arr2 = [&quot;a&quot;, &quot;b&quot;]&#10;print(list(chain(arr1,arr2)))&#10;# [1, 2, 'a', 'b']" description="chain(arr1,arr2)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl list add many (chain aka flatMap)" value="print(list(chain.from_iterable(['ab', 'cd']))) &#10;# ['a', 'b', 'c', 'd']" description="chain.from_iterable(['ab', 'cd']) одновременно распаковывает внутренние итераторы во внешний" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="rl list get one noErrorIfAbsent OLD" value="get_or_default = lambda list_, idx, default: list_[idx] if idx &gt;= 0 and idx &lt; len(list_) else default # ! но тогда придется забыть об отрицательных индексах = доступ от конца&#10;compute_or_default = lambda list_, idx, compute, default:compute(list_[idx]) if idx &gt;= 0 and idx &lt; len(list_) else default&#10;# distance_or_inf= lambda list_, idx: distance([to_point,list_[idx]]) if idx &gt;= 0 and idx &lt; len(list_) else inf" description="get/compute or default value" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cm map add many (super)" value="$s$|={1:&quot;a&quot;,2:&quot;b&quot;$END$}" description="map|={}" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="rl list get OR default 2 noErrorIfAbsent" value="def get_or_default(idx):&#10;    if 0 &lt;= idx &lt; len(nums):&#10;        return nums[idx]&#10;    return None" description="def get_or_default(idx):" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dl list del many by value" value="while 2 in $s$: $s$.remove($END$)" description="while in : list.remove" toReformat="false" toShortenFQNames="true">
    <variable name="s" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="rl list get OR default 1" value="str = str.zfill(n)" description="можно просто дозаполнить исходные данные пустышками" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="rl list find MANY" value="foo_indexes = [n for n,x in enumerate(alist) if x=='foo']&#10; $END$" description="[  for   in   if x=='foo']" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>