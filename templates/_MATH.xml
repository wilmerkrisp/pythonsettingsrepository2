<templateSet group="_MATH">
  <template name="new int INFINITE NUMBER" value="inf&#10;#print (min(12,3,inf))" description="math.inf" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="for MIN by key(of iterable object)" value="min([pt1, pt2, pt3], key=lambda x:x[0])" description="min(key=)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="for SORT by key LIST" value="$P$.sort(key=lambda x:x[0])" description="sort(key=)" toReformat="false" toShortenFQNames="true">
    <variable name="P" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func random integer" value="randint(1,10) #   [1,10]" description="math.inf" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="if ODD or EVEN  middle of integers" value="middle =  ((b-a)//2)-1 if (b-a)%2==0 else (b-a)//2" description="if (b-a)%2==0" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fordict SORT by value DICT" value="meta1=sorted(meta.items(), key=lambda e:e[1])" description="sorted(items()  key=lambda)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fordict SORT by value DICT 2" value="nsmallest(len(result), result.items(), key=lambda e:e[1])" description="nsmallest" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fordict SORT by value DICT get only keys" value="result2 = [k for k, v in sorted(result.items(), key=lambda e:e[1])]" description="sorted(items()  key=lambda)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fuct counter NEXT INTEGER NUMBER" value="counter = itertools.count()     # unique sequence count&#10;count = next(counter)" description="itertools.count" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fordict MIN by key DICT" value="costs = dict(a=1)#dict(a=1,b=2,c=3)&#10;processed ={&quot;a&quot;}&#10;vertex, _ = min(costs.items(), key=lambda e:e[1] if e[0] not in processed else inf)&#10;print (vertex)" description="min(key=)" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fordict SWAP values and keys" value="p = {v:k for k, v in $parents$.items()}" description="{v:k}" toReformat="false" toShortenFQNames="true">
    <variable name="parents" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func log" value="log(x,10)" description="log2 log10" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="func округление" value="trunc() # усечение, отбросить дробную часть&#10;floor() # округлить к низу&#10;round(2.65) # округлить до 2&#10;round(2.65, 1) # округлить до 2.6&#10;" description="trunc/floor/round" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>